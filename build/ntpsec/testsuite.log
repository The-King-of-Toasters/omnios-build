BINARY      : runtests
RETURN VALUE: 0

*** stdout ***
Test allocation failure cases:
AES_SIV_CTX_new() succeeds after 6 successful allocations.
Test cleanup before free: OK
Test vector 1:
             key: fffefdfc fbfaf9f8 f7f6f5f4 f3f2f1f0 
                  f0f1f2f3 f4f5f6f7 f8f9fafb fcfdfeff 
              AD: 10111213 14151617 18191a1b 1c1d1e1f 
                  20212223 24252627 
       plaintext: 11223344 55667788 99aabbcc ddee
 exp. ciphertext: 85632d07 c6e8f37f 950acd32 0a2ecc93 
                  40c02b96 90c4dc04 daef7f6a fe5c
Encryption:
      CMAC(zero): 0e04dfaf c1efbf04 01405828 59bf073a 
        double(): 1c09bf5f 83df7e08 0280b050 b37e0e74 
        CMAC(ad): f1f922b7 f5193ce6 4ff80cb4 7d93f23b 
             xor: edf09de8 76c642ee 4d78bce4 ceedfc4f 
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: cac30894 b8eaf254 035bc205 40357819 
     CMAC(final): 85632d07 c6e8f37f 950acd32 0a2ecc93 
      ciphertext: 40c02b96 90c4dc04 daef7f6a fe5c
         IV || C: 85632d07 c6e8f37f 950acd32 0a2ecc93 
                  40c02b96 90c4dc04 daef7f6a fe5c
Decryption:
      CMAC(zero): 0e04dfaf c1efbf04 01405828 59bf073a 
        double(): 1c09bf5f 83df7e08 0280b050 b37e0e74 
        CMAC(ad): f1f922b7 f5193ce6 4ff80cb4 7d93f23b 
             xor: edf09de8 76c642ee 4d78bce4 ceedfc4f 
       plaintext: 11223344 55667788 99aabbcc ddee
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: cac30894 b8eaf254 035bc205 40357819 
     CMAC(final): 85632d07 c6e8f37f 950acd32 0a2ecc93 
       plaintext: 11223344 55667788 99aabbcc ddee
Test vector 2:
             key: 7f7e7d7c 7b7a7978 77767574 73727170 
                  40414243 44454647 48494a4b 4c4d4e4f 
             AD1: 00112233 44556677 8899aabb ccddeeff 
                  deaddada deaddada ffeeddcc bbaa9988 
                  77665544 33221100 
             AD2: 10203040 50607080 90a0
           nonce: 09f91102 9d74e35b d84156c5 635688c0 
       plaintext: 74686973 20697320 736f6d65 20706c61 
                  696e7465 78742074 6f20656e 63727970 
                  74207573 696e6720 5349562d 414553
 exp. ciphertext: 7bdb6e3b 432667eb 06f4d14b ff2fbd0f 
                  cb900f2f ddbe4043 26601965 c889bf17 
                  dba77ceb 094fa663 b7a3f748 ba8af829 
                  ea64ad54 4a272e9c 485b62a3 fd5c0d
Encryption:
      CMAC(zero): c8b43b59 74960e7c e6a5dd85 231e591a 
        double(): 916876b2 e92c1cf9 cd4bbb0a 463cb2b3 
        CMAC(ad): 3c9b689a b41102e4 80954714 1dd0d15a 
             xor: adf31e28 5d3d1e1d 4ddefc1e 5bec63e9 
        double(): 5be63c50 ba7a3c3a 9bbdf83c b7d8c755 
        CMAC(ad): d98c9b0b e42cb2d7 aa98478e d11eda1b 
             xor: 826aa75b 5e568eed 3125bfb2 66c61d4e 
        double(): 04d54eb6 bcad1dda 624b7f64 cd8c3a1b 
        CMAC(ad): 128c62a1 ce3747a8 372c1c05 a538b96d 
             xor: 16592c17 729a5a72 55676361 68b48376 
   xorend part 1: 74686973 20697320 736f6d65 20706c61 
                  696e7465 78742074 6f20656e 637279
   xorend part 2: 662d0c62 01f33415 75342a37 45f5c625 
     CMAC(final): 7bdb6e3b 432667eb 06f4d14b ff2fbd0f 
      ciphertext: cb900f2f ddbe4043 26601965 c889bf17 
                  dba77ceb 094fa663 b7a3f748 ba8af829 
                  ea64ad54 4a272e9c 485b62a3 fd5c0d
         IV || C: 7bdb6e3b 432667eb 06f4d14b ff2fbd0f 
                  cb900f2f ddbe4043 26601965 c889bf17 
                  dba77ceb 094fa663 b7a3f748 ba8af829 
                  ea64ad54 4a272e9c 485b62a3 fd5c0d
Decryption:
      CMAC(zero): c8b43b59 74960e7c e6a5dd85 231e591a 
        double(): 916876b2 e92c1cf9 cd4bbb0a 463cb2b3 
        CMAC(ad): 3c9b689a b41102e4 80954714 1dd0d15a 
             xor: adf31e28 5d3d1e1d 4ddefc1e 5bec63e9 
        double(): 5be63c50 ba7a3c3a 9bbdf83c b7d8c755 
        CMAC(ad): d98c9b0b e42cb2d7 aa98478e d11eda1b 
             xor: 826aa75b 5e568eed 3125bfb2 66c61d4e 
        double(): 04d54eb6 bcad1dda 624b7f64 cd8c3a1b 
        CMAC(ad): 128c62a1 ce3747a8 372c1c05 a538b96d 
             xor: 16592c17 729a5a72 55676361 68b48376 
       plaintext: 74686973 20697320 736f6d65 20706c61 
                  696e7465 78742074 6f20656e 63727970 
                  74207573 696e6720 5349562d 414553
   xorend part 1: 74686973 20697320 736f6d65 20706c61 
                  696e7465 78742074 6f20656e 637279
   xorend part 2: 662d0c62 01f33415 75342a37 45f5c625 
     CMAC(final): 7bdb6e3b 432667eb 06f4d14b ff2fbd0f 
       plaintext: 74686973 20697320 736f6d65 20706c61 
                  696e7465 78742074 6f20656e 63727970 
                  74207573 696e6720 5349562d 414553
384-bit key test:
             key: fffefdfc fbfaf9f8 f7f6f5f4 f3f2f1f0 
                  f0f1f2f3 f4f5f6f7 f8f9fafb fcfdfeff 
                  fffefdfc fbfaf9f8 f7f6f5f4 f3f2f1f0 
              AD: 10111213 14151617 18191a1b 1c1d1e1f 
                  20212223 24252627 
       plaintext: 11223344 55667788 99aabbcc ddee
 exp. ciphertext: 89e869b9 32567851 54f09639 62fe0740 
                  eff356e4 2dec1f4f ebded366 42f2
Encryption:
      CMAC(zero): caa30589 56328045 f71d3683 121fd271 
        double(): 95460b12 ac65008b ee3a6d06 243fa465 
        CMAC(ad): 42db9c74 73f22d43 282d0bbd eda4346d 
             xor: d79d9766 df972dc8 c61766bb c99b9008 
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: be191d89 ea482c19 158476bb 4ed9a097 
     CMAC(final): 89e869b9 32567851 54f09639 62fe0740 
      ciphertext: eff356e4 2dec1f4f ebded366 42f2
         IV || C: 89e869b9 32567851 54f09639 62fe0740 
                  eff356e4 2dec1f4f ebded366 42f2
Decryption:
      CMAC(zero): caa30589 56328045 f71d3683 121fd271 
        double(): 95460b12 ac65008b ee3a6d06 243fa465 
        CMAC(ad): 42db9c74 73f22d43 282d0bbd eda4346d 
             xor: d79d9766 df972dc8 c61766bb c99b9008 
       plaintext: 11223344 55667788 99aabbcc ddee
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: be191d89 ea482c19 158476bb 4ed9a097 
     CMAC(final): 89e869b9 32567851 54f09639 62fe0740 
       plaintext: 11223344 55667788 99aabbcc ddee
512-bit key test:
             key: fffefdfc fbfaf9f8 f7f6f5f4 f3f2f1f0 
                  f0f1f2f3 f4f5f6f7 f8f9fafb fcfdfeff 
                  f0f1f2f3 f4f5f6f7 f8f9fafb fcfdfeff 
                  fffefdfc fbfaf9f8 f7f6f5f4 f3f2f1f0 
              AD: 10111213 14151617 18191a1b 1c1d1e1f 
                  20212223 24252627 
       plaintext: 11223344 55667788 99aabbcc ddee
 exp. ciphertext: 724dfb2e af94dbb1 9b0ba3a2 99a0801e 
                  f3b05a55 498ec255 2690b898 10e4
Encryption:
      CMAC(zero): 8eed9898 9c883019 85c48350 88b0592d 
        double(): 1ddb3131 39106033 0b8906a1 1160b2dd 
        CMAC(ad): bdb99556 dea3a38d f5f07bbe d1b62137 
             xor: a062a467 e7b3c3be fe797d1f c0d693ea 
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: 51e77b8b 9a01f0f5 655841f3 5c43a753 
     CMAC(final): 724dfb2e af94dbb1 9b0ba3a2 99a0801e 
      ciphertext: f3b05a55 498ec255 2690b898 10e4
         IV || C: 724dfb2e af94dbb1 9b0ba3a2 99a0801e 
                  f3b05a55 498ec255 2690b898 10e4
Decryption:
      CMAC(zero): 8eed9898 9c883019 85c48350 88b0592d 
        double(): 1ddb3131 39106033 0b8906a1 1160b2dd 
        CMAC(ad): bdb99556 dea3a38d f5f07bbe d1b62137 
             xor: a062a467 e7b3c3be fe797d1f c0d693ea 
       plaintext: 11223344 55667788 99aabbcc ddee
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: 51e77b8b 9a01f0f5 655841f3 5c43a753 
     CMAC(final): 724dfb2e af94dbb1 9b0ba3a2 99a0801e 
       plaintext: 11223344 55667788 99aabbcc ddee
Test high-level interface with non-NULL nonce:
             key: fffefdfc fbfaf9f8 f7f6f5f4 f3f2f1f0 
                  f0f1f2f3 f4f5f6f7 f8f9fafb fcfdfeff 
              AD: 10111213 14151617 18191a1b 1c1d1e1f 
                  20212223 24252627 
           nonce: 09f91102 9d74e35b d84156c5 635688c0 
       plaintext: 11223344 55667788 99aabbcc ddee
Encryption:
      CMAC(zero): 0e04dfaf c1efbf04 01405828 59bf073a 
        double(): 1c09bf5f 83df7e08 0280b050 b37e0e74 
        CMAC(ad): f1f922b7 f5193ce6 4ff80cb4 7d93f23b 
             xor: edf09de8 76c642ee 4d78bce4 ceedfc4f 
        double(): dbe13bd0 ed8c85dc 9af179c9 9ddbf819 
        CMAC(ad): 70d427c9 4b396a0e fcd1ce31 207db086 
             xor: ab351c19 a6b5efd2 6620b7f8 bda6489f 
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: 47480b77 180da82c 55ebd43d a6a211b9 
     CMAC(final): b477a36b 0d0f7898 7d985f38 87a7572d 
      ciphertext: 52352f0e d261459e 0de50f26 8260
         IV || C: b477a36b 0d0f7898 7d985f38 87a7572d 
                  52352f0e d261459e 0de50f26 8260
Decryption:
      CMAC(zero): 0e04dfaf c1efbf04 01405828 59bf073a 
        double(): 1c09bf5f 83df7e08 0280b050 b37e0e74 
        CMAC(ad): f1f922b7 f5193ce6 4ff80cb4 7d93f23b 
             xor: edf09de8 76c642ee 4d78bce4 ceedfc4f 
        double(): dbe13bd0 ed8c85dc 9af179c9 9ddbf819 
        CMAC(ad): 70d427c9 4b396a0e fcd1ce31 207db086 
             xor: ab351c19 a6b5efd2 6620b7f8 bda6489f 
       plaintext: 11223344 55667788 99aabbcc ddee
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: 47480b77 180da82c 55ebd43d a6a211b9 
     CMAC(final): b477a36b 0d0f7898 7d985f38 87a7572d 
       plaintext: 11223344 55667788 99aabbcc ddee
      CMAC(zero): 0e04dfaf c1efbf04 01405828 59bf073a 
        double(): 1c09bf5f 83df7e08 0280b050 b37e0e74 
        CMAC(ad): f1f922b7 f5193ce6 4ff80cb4 7d93f23b 
             xor: edf09de8 76c642ee 4d78bce4 ceedfc4f 
        double(): 1c09bf5f 83df7e08 0280b050 b37e0e74 
        CMAC(ad): f1f922b7 f5193ce6 4ff80cb4 7d93f23b 
             xor: edf09de8 76c642ee 4d78bce4 ceedfc4f 
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: cac30894 b8eaf254 035bc205 40357819 
     CMAC(final): 85632d07 c6e8f37f 950acd32 0a2ecc93 
      ciphertext: 40c02b96 90c4dc04 daef7f6a fe5c
             pad: 11223344 55667788 99aabbcc ddee8000 
             xor: cac30894 b8eaf254 035bc205 40357819 
     CMAC(final): 85632d07 c6e8f37f 950acd32 0a2ecc93 
      ciphertext: 40c02b96 90c4dc04 daef7f6a fe5c
             pad: 11223344 55667788 99aabbcc ddef8000 
             xor: cac30894 b8eaf254 035bc205 40347819 
     CMAC(final): bffdac5c b8fe7d97 3ea5da07 79b067a1 
      ciphertext: 7a677d15 f294eb27 035a9145 9244
Test bad key size: OK
Test decryption failure:
      CMAC(zero): 763cbcde 81df9131 bf897712 c088edad 
        double(): ec7979bd 03bf2263 7f12ee25 8111db5a 
        CMAC(ad): 763cbcde 81df9131 bf897712 c088edad 
             xor: 9a45c563 8260b352 c09b9937 419936f7 
       plaintext: 66e94bd4 ef8a2c3b 884cfa59 ca342b2e 
   xorend part 1: 
   xorend part 2: fcac8eb7 6dea9f69 48d7636e 8bad1dd9 
     CMAC(final): 9db0951a f98393d7 8766c419 4c706d68 



BINARY      : test_agentx.py
RETURN VALUE: 0

*** stderr ***
.............................
----------------------------------------------------------------------
Ran 29 tests

OK



BINARY      : test_agentx_packet.py
RETURN VALUE: 0

*** stderr ***
........................................
----------------------------------------------------------------------
Ran 40 tests

OK



BINARY      : test_libntp
RETURN VALUE: 0

*** stdout ***
Unity test run 1 of 1
TEST(authkeys, AddTrustedKeys) PASS
TEST(authkeys, AddUntrustedKey) PASS
TEST(authkeys, HaveKeyCorrect) PASS
TEST(authkeys, HaveKeyIncorrect) PASS
TEST(calendar, is_leapyear) PASS
TEST(calendar, julian0) PASS
TEST(calendar, days_per_year) PASS
TEST(calendar, parse_to_unixtime) PASS
TEST(calendar, PeriodicExtend1) PASS
TEST(calendar, NtpToTime1) PASS
TEST(calendar, NtpToNtp1) PASS
TEST(calendar, DaySplitMerge) PASS
TEST(calendar, DaysecToDate1) PASS
TEST(calendar, SplitEraDays1) PASS
TEST(calendar, SplitYearDays1) PASS
TEST(calendar, SplitYearDays2) PASS
TEST(calendar, RataDie1) PASS
TEST(calendar, TimeToDate1) PASS
TEST(calendar, DayJoin1) PASS
TEST(calendar, DaysInYears1) PASS
TEST(calendar, EdateToEradays1) PASS
TEST(calendar, EtimeToSeconds1) PASS
TEST(calendar, TmToRd1) PASS
TEST(calendar, LeapYears1) PASS
TEST(calendar, LeapYears2) PASS
TEST(calendar, RoundTripDate) PASS
TEST(calendar, DateToDaysec1) PASS
TEST(calendar, TmToDaysec1) PASS
TEST(calendar, DateToTime1) PASS
TEST(calendar, Ntp64ToDate1) PASS
TEST(calendar, NtpToDate1) PASS
TEST(clocktime, CurrentYear) PASS
TEST(clocktime, CurrentYearExplicit) PASS
TEST(clocktime, CurrentYearFuzz) PASS
TEST(clocktime, WrongYearStart) PASS
TEST(clocktime, PreviousYear) PASS
TEST(clocktime, NextYear) PASS
TEST(clocktime, NoReasonableConversion) PASS
TEST(clocktime, AlwaysInLimit) PASS
TEST(endian, Bit16) PASS
TEST(endian, Bit32) PASS
TEST(endian, Bit64) PASS
TEST(decodenetnum, Services) PASS
TEST(decodenetnum, IPv4AddressOnly) PASS
TEST(decodenetnum, IPv4AddressWithPort) PASS
TEST(decodenetnum, IPv4AddressWithPort2) PASS
TEST(decodenetnum, IPv6AddressOnly) PASS
TEST(decodenetnum, IPv6AddressWithPort) PASS
TEST(decodenetnum, IllegalAddress) PASS
TEST(decodenetnum, IllegalCharInPort) PASS
TEST(dolfptoa, DoLfpToA) PASS
TEST(dolfptoa, MfpToA) PASS
TEST(dolfptoa, MfpToMs) PASS
TEST(hextolfp, ExerciseIsEqualPrinting) PASS
TEST(hextolfp, PositiveInteger) PASS
TEST(hextolfp, NegativeInteger) PASS
TEST(hextolfp, PositiveFraction) PASS
TEST(hextolfp, NegativeFraction) PASS
TEST(hextolfp, IllegalNumberOfInteger) PASS
TEST(hextolfp, IllegalChar) PASS
TEST(lfpfunc, Extraction) PASS
TEST(lfpfunc, Negation) PASS
TEST(lfpfunc, Absolute) PASS
TEST(lfpfunc, FDF_RoundTrip) PASS
TEST(lfpfunc, SignedRelOps) PASS
TEST(lfpfunc, UnsignedRelOps) PASS
TEST(lfptostr, PositiveInteger) PASS
TEST(lfptostr, NegativeInteger) PASS
TEST(lfptostr, PositiveIntegerWithFraction) PASS
TEST(lfptostr, NegativeIntegerWithFraction) PASS
TEST(lfptostr, RoundingDownToInteger) PASS
TEST(lfptostr, RoundingMiddleToInteger) PASS
TEST(lfptostr, RoundingUpToInteger) PASS
TEST(lfptostr, SingleDecimal) PASS
TEST(lfptostr, MillisecondsRoundingUp) PASS
TEST(lfptostr, MillisecondsRoundingDown) PASS
TEST(lfptostr, UnsignedInteger) PASS
TEST(macencrypt, Encrypt) PASS
TEST(macencrypt, DecryptValid) PASS
TEST(macencrypt, DecryptInvalid) PASS
TEST(macencrypt, CMAC_Encrypt) PASS
TEST(macencrypt, CMAC_Encrypt) PASS
TEST(macencrypt, DecryptValidCMAC) PASS
TEST(macencrypt, DecryptInvalidCMAC) PASS
TEST(macencrypt, IPv4AddressToRefId) PASS
TEST(macencrypt, IPv6AddressToRefId) PASS
TEST(macencrypt, null_trunc) PASS
TEST(macencrypt, CMAC_TestVectors) PASS
TEST(numtoa, RefidStr) PASS
TEST(prettydate, ConstantDate) PASS
TEST(prettydate, Rfc3339Date1) PASS
TEST(prettydate, Rfc3339Time1) PASS
TEST(random, random32) PASS
TEST(random, random_bytes) PASS
TEST(refidsmear, Main) PASS
TEST(socktoa, IPv4AddressWithPort) PASS
TEST(socktoa, IPv6AddressWithPort) PASS
TEST(socktoa, ScopedIPv6AddressWithPort) PASS
TEST(socktoa, HashEqual) PASS
TEST(socktoa, HashNotEqual) PASS
TEST(socktoa, IgnoreIPv6Fields) PASS
TEST(statestr, ResMatchFlags) PASS
TEST(statestr, ResAccessFlags) PASS
TEST(statestr, ResAccessFlags2) PASS
TEST(statestr, KSTFlags) PASS
TEST(statestr, StatusToA) PASS
TEST(statestr, PeerRestart) PASS
TEST(statestr, SysUnspecified) PASS
TEST(statestr, ClockCodeExists) PASS
TEST(statestr, ClockCodeUnknown) PASS
TEST(timespecops, Helpers1) PASS
TEST(timespecops, Normalise) PASS
TEST(timespecops, SignNoFrac) PASS
TEST(timespecops, SignWithFrac) PASS
TEST(timespecops, CmpFracEQ) PASS
TEST(timespecops, CmpFracGT) PASS
TEST(timespecops, CmpFracLT) PASS
TEST(timespecops, AddFullNorm) PASS
TEST(timespecops, AddFullOflow1) PASS
TEST(timespecops, AddNsecNorm) PASS
TEST(timespecops, AddNsecOflow1) PASS
TEST(timespecops, SubFullNorm) PASS
TEST(timespecops, SubFullOflow) PASS
TEST(timespecops, SubNsecNorm) PASS
TEST(timespecops, SubNsecOflow) PASS
TEST(timespecops, test_Neg) PASS
TEST(timespecops, test_AbsNoFrac) PASS
TEST(timespecops, test_AbsWithFrac) PASS
TEST(timespecops, test_ToLFPbittest) PASS
TEST(timespecops, test_ToLFPrelPos) PASS
TEST(timespecops, test_ToLFPrelNeg) PASS
TEST(timespecops, test_ToLFPabs) PASS
TEST(timespecops, test_FromLFPbittest) PASS
TEST(timespecops, test_FromLFPrelPos) PASS
TEST(timespecops, test_FromLFPrelNeg) PASS
TEST(timespecops, test_LFProundtrip) PASS
TEST(timespecops, test_FromLFPuBittest) PASS
TEST(timespecops, test_FromLFPuRelPos) PASS
TEST(timespecops, test_FromLFPuRelNeg) PASS
TEST(timespecops, test_LFPuRoundtrip) PASS
TEST(timespecops, DToTspec) PASS
TEST(timespecops, LfpStampToTspec) PASS
TEST(timespecops, TvalToTspec) PASS
TEST(vi64ops, SetVUI64s_pos) PASS
TEST(vi64ops, SetVUI64s_neg) PASS
TEST(vi64ops, SetVUI64u) PASS
TEST(vi64ops, NegVUI64) PASS
TEST(ymd2yd, NonLeapYearFebruary) PASS
TEST(ymd2yd, NonLeapYearJune) PASS
TEST(ymd2yd, LeapYearFebruary) PASS
TEST(ymd2yd, LeapYearDecember) PASS

-----------------------
151 Tests 0 Failures 0 Ignored 
OK



BINARY      : test_libparse
RETURN VALUE: 0

*** stdout ***
Unity test run 1 of 1
TEST(binio, get_lsb_int160) PASS
TEST(binio, get_lsb_int161) PASS
TEST(binio, get_lsb_int162) PASS
TEST(binio, get_lsb_int163) PASS
TEST(binio, get_lsb_int164) PASS
TEST(binio, get_lsb_int320) PASS
TEST(binio, get_lsb_int321) PASS
TEST(binio, get_lsb_int322) PASS
TEST(binio, get_lsb_int323) PASS
TEST(binio, get_lsb_int324) PASS
TEST(binio, put_lsb_uint160) PASS
TEST(binio, put_lsb_uint161) PASS
TEST(binio, put_lsb_uint162) PASS
TEST(binio, put_lsb_uint163) PASS
TEST(binio, put_lsb_uint164) PASS
TEST(binio, get_lsb_uint160) PASS
TEST(binio, get_lsb_uint161) PASS
TEST(binio, get_lsb_uint162) PASS
TEST(binio, get_lsb_uint163) PASS
TEST(binio, get_lsb_uint164) PASS
TEST(binio, get_lsb_uint320) PASS
TEST(binio, get_lsb_uint321) PASS
TEST(binio, get_lsb_uint322) PASS
TEST(binio, get_lsb_uint323) PASS
TEST(binio, get_lsb_uint324) PASS
TEST(binio, get_msb_short0) PASS
TEST(binio, get_msb_short1) PASS
TEST(binio, get_msb_short2) PASS
TEST(binio, get_msb_short3) PASS
TEST(binio, get_msb_short4) PASS
TEST(binio, getmsb_short0) PASS
TEST(binio, getmsb_short1) PASS
TEST(binio, getmsb_short2) PASS
TEST(binio, getmsb_short3) PASS
TEST(binio, getmsb_short4) PASS
TEST(binio, get_msb_ushort0) PASS
TEST(binio, get_msb_ushort1) PASS
TEST(binio, get_msb_ushort2) PASS
TEST(binio, get_msb_ushort3) PASS
TEST(binio, get_msb_ushort4) PASS
TEST(gpstolfp, check) PASS
TEST(ieee754io, test_zero32) PASS
TEST(ieee754io, test_one32) PASS
TEST(ieee754io, test_negone32) PASS
TEST(ieee754io, test_small32) PASS
TEST(ieee754io, test_nan32) PASS
TEST(ieee754io, test_max32) PASS
TEST(ieee754io, test_order32) PASS
TEST(ieee754io, test_zero64) PASS
TEST(ieee754io, test_one64) PASS
TEST(ieee754io, test_negone64) PASS
TEST(ieee754io, test_small64) PASS
TEST(ieee754io, test_nan64) PASS
TEST(ieee754io, test_max64) PASS
TEST(ieee754io, test_order64) PASS

-----------------------
55 Tests 0 Failures 0 Ignored 
OK



BINARY      : test_ntpc.py
RETURN VALUE: 0

*** stderr ***
....
----------------------------------------------------------------------
Ran 4 tests

OK



BINARY      : test_ntpd
RETURN VALUE: 0

*** stdout ***
Unity test run 1 of 1
TEST(leapsec, ValidateGood) PASS
TEST(leapsec, ValidateNoHash) PASS
TEST(leapsec, ValidateBad) PASS
TEST(leapsec, ValidateMalformed) PASS
TEST(leapsec, ValidateMalformedShort) PASS
TEST(leapsec, ValidateNoLeadZero) PASS
TEST(leapsec, tableSelect) PASS
TEST(leapsec, loadFileExpire) PASS
TEST(leapsec, loadFileTTL) PASS
TEST(leapsec, lsQueryPristineState)leap table (0 entries) expires at 1970-01-01:
 PASS
TEST(leapsec, ls2009faraway) PASS
TEST(leapsec, ls2009weekaway) PASS
TEST(leapsec, ls2009houraway) PASS
TEST(leapsec, ls2009secaway) PASS
TEST(leapsec, ls2009onspot) PASS
TEST(leapsec, ls2009nodata) PASS
TEST(leapsec, ls2009limdata)leap table (10 entries) expires at 2014-06-01:
1991-01-01 [-] (1990-12-04) - 26
1992-07-01 [-] (1992-06-03) - 27
1993-07-01 [-] (1993-06-03) - 28
1994-07-01 [-] (1994-06-03) - 29
1996-01-01 [-] (1995-12-04) - 30
1997-07-01 [-] (1997-06-03) - 31
1999-01-01 [-] (1998-12-04) - 32
2006-01-01 [-] (2005-12-04) - 33
2009-01-01 [-] (2008-12-04) - 34
2012-07-01 [-] (2012-06-03) - 35
 PASS
TEST(leapsec, addDynamic)leap table (10 entries) expires at 1993-07-01:
1990-01-01 [-] (1989-12-04) - 25
1991-01-01 [-] (1990-12-04) - 26
1992-07-01 [-] (1992-06-03) - 27
1993-07-01 [-] (1993-06-03) - 28
1996-01-11 [*] (1995-12-11) - 29
1997-07-10 [*] (1997-06-10) - 30
1999-01-11 [*] (1998-12-11) - 31
2006-01-11 [*] (2005-12-11) - 32
2009-01-11 [*] (2008-12-11) - 33
2012-07-10 [*] (2012-06-10) - 34
 PASS
TEST(leapsec, addFixed) PASS
TEST(leapsec, ls2009seqInsElectric) PASS
TEST(leapsec, ls2009seqInsDumb) PASS
TEST(leapsec, ls2009seqDelElectric) PASS
TEST(leapsec, ls2009seqDelDumb) PASS
TEST(leapsec, ls2012seqInsElectric) PASS
TEST(leapsec, ls2012seqInsDumb) PASS
TEST(leapsec, lsEmptyTableDumb) PASS
TEST(leapsec, lsEmptyTableElectric) PASS
TEST(hackrestrict, RestrictionsAreEmptyAfterInit) PASS
TEST(hackrestrict, ReturnsCorrectDefaultRestrictions) PASS
TEST(hackrestrict, HackingDefaultRestriction) PASS
TEST(hackrestrict, CantRemoveDefaultEntry) PASS
TEST(hackrestrict, AddingNewRestriction) PASS
TEST(hackrestrict, TheMostFittingRestrictionIsMatched) PASS
TEST(hackrestrict, DeletedRestrictionIsNotMatched) PASS
TEST(hackrestrict, RestrictUnflagWorks) PASS
TEST(recvbuff, Initialization) PASS
TEST(recvbuff, GetAndFree) PASS
TEST(nts, nts_translate_version) PASS
TEST(nts, nts_string_to_aead) PASS
TEST(nts, nts_get_key_length) PASS
TEST(nts, ke_append_record_null) PASS
TEST(nts, ke_append_record_uint16) PASS
TEST(nts, ke_append_record_bytes) PASS
TEST(nts, ex_append_record_null) PASS
TEST(nts, ex_append_record_uint16) PASS
TEST(nts, ex_append_record_bytes) PASS
TEST(nts, ex_append_header) PASS
TEST(nts, append_header) PASS
TEST(nts, append_uint16) PASS
TEST(nts, append_bytes) PASS
TEST(nts, ke_next_record) PASS
TEST(nts, ex_next_record) PASS
TEST(nts, next_uint16) PASS
TEST(nts, next_bytes) PASS
TEST(nts_client, nts_client_send_request_core) PASS
TEST(nts_client, nts_client_process_response_core) PASS
TEST(nts_server, nts_ke_process_receive) PASS
TEST(nts_cookie, nts_make_unpack_cookie) PASS
TEST(nts_cookie, nts_make_cookie_key) PASS
TEST(nts_cookie, nts_read_write_cookies) PASS
TEST(nts_extens, extens_client_send) PASS
TEST(nts_extens, extens_server_recv) PASS

-----------------------
62 Tests 0 Failures 0 Ignored 
OK



BINARY      : test_packet.py
RETURN VALUE: 0

*** stderr ***
...............................................................
----------------------------------------------------------------------
Ran 63 tests

OK



BINARY      : test_statfiles.py
RETURN VALUE: 0

*** stderr ***
..............
----------------------------------------------------------------------
Ran 14 tests

OK



BINARY      : test_util.py
RETURN VALUE: 0

*** stderr ***
.............................................
----------------------------------------------------------------------
Ran 45 tests

OK



