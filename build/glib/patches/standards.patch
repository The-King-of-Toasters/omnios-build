
These values are set appropriately by the build framework and don't need to
be hard coded in the meson script.
In particular, setting `_XOPEN_SOURCE_EXTENDED` forces a maximum standard
of XPG4v2, which is not high enough for the features that glib tries to
use.

diff -wpruN --no-dereference '--exclude=*.orig' a~/meson.build a/meson.build
--- a~/meson.build	1970-01-01 00:00:00
+++ a/meson.build	1970-01-01 00:00:00
@@ -2516,26 +2516,6 @@ have_pkg_config = find_program('pkg-conf
 # Some installed tests require a custom environment
 env_program = find_program('env', required: installed_tests_enabled)
 
-# illumos & Solaris may need extra definitions to expose some SUS/POSIX
-# interfaces in headers that conflict with previous Solaris headers.
-# But if we define them to request an older version of the standards,
-# we may hide things introduced in newer versions.  We only check the
-# versions that are supported on systems new enough that meson runs on them.
-if host_system == 'sunos'
-  xopen_test_code = '''#include <unistd.h>
-  #if _XOPEN_VERSION != _XOPEN_SOURCE
-  #error "XOPEN_SOURCE of _XOPEN_SOURCE not supported"
-  #endif'''
-  foreach std : ['800', '700', '600']
-    if cc.compiles(xopen_test_code, args: '-D_XOPEN_SOURCE=' + std, name: 'building with _XOPEN_SOURCE=' + std)
-      xopen_version = std
-      break
-    endif
-  endforeach
-  glib_conf.set('_XOPEN_SOURCE', xopen_version)
-  glib_conf.set('__EXTENSIONS__',1)
-endif
-
 # Sadly Meson does not expose this value:
 # https://github.com/mesonbuild/meson/pull/3460
 if host_system == 'windows'
